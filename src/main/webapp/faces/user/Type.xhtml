<ui:composition template="../template/Layout.xhtml"
                xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
                xmlns:h="http://xmlns.jcp.org/jsf/html"
                xmlns:f="http://xmlns.jcp.org/jsf/core"
                xmlns:p="http://primefaces.org/ui">
    <ui:define name="contenu">
        <div class="card my-4">
            <h:form id="modifyType" styleClass="w-8 m-auto">
                <p:growl id="messages" showDetail="true" />

                <p:toolbar>
                    <p:toolbarGroup>
                        <p:commandButton value="New" icon="pi pi-plus" actionListener="#{typeBean.openNew}"
                                         update=":dialogs:add-type-content" oncomplete="PF('addTypeDialog').show()"
                                         styleClass="ui-button-success" style="margin-right: .5rem">
                            <p:resetInput target=":dialogs:add-type-content" />
                        </p:commandButton>
                        <p:commandButton id="delete-type-button" value="#{typeBean.deleteButtonMessage}"
                                         icon="pi pi-trash" actionListener="#{typeBean.deleteSelectedType}"
                                         styleClass="ui-button-danger" disabled="#{!typeBean.hasSelectedType()}" update="@this">
                            <p:confirm header="Confirmation" message="Supprimer les types sélectionnées?"
                                       icon="pi pi-exclamation-triangle" />
                        </p:commandButton>
                    </p:toolbarGroup>
                    <p:toolbarGroup align="right">
                        <p:fileUpload mode="simple" skinSimple="true" label="Import" chooseIcon="pi pi-download" />
                        <p:commandButton value="Export" icon="pi pi-upload" styleClass="ui-button-help" ajax="false">
                            <p:dataExporter type="pdf" target="types" fileName="ALL TYPES" preProcessor="#{printDocumentView.preProcessPDF}" options="#{printDocumentView.pdfOpt}" />
                        </p:commandButton>
                    </p:toolbarGroup>
                </p:toolbar>

                <p:dataTable id="types" var="type" value="#{typeBean.filteredType}" reflow="true" styleClass="products-table" selection="#{typeBean.selectedTypeList}"
                             paginator="true" rows="5" rowSelectMode="add" paginatorPosition="bottom" rowKey="#{type.id}">

                    <p:ajax event="rowSelect" update=":modifyType:delete-type-button" />
                    <p:ajax event="rowUnselect" update=":modifyType:delete-type-button" />
                    <p:ajax event="rowSelectCheckbox" update=":modifyType:delete-type-button" />
                    <p:ajax event="rowUnselectCheckbox" update=":modifyType:delete-type-button" />
                    <p:ajax event="toggleSelect" update=":modifyType:delete-type-button" />

                    <p:column selectionMode="multiple" exportable="false" styleClass="text-center"/>

                    <p:column headerText="ID TYPE" style="width: 15%" styleClass="text-center">
                        <h:outputText value="#{type.id}" styleClass="text-center	"/>
                    </p:column>
                    <p:column headerText="NOM TYPE" style="width: 50%" styleClass="text-center">
                        <h:outputText value="#{type.libelle}" styleClass="text-center	">
                        </h:outputText>
                    </p:column>

                    <p:column exportable="false"  headerText="Check" style="width: 15%" styleClass="text-center	">
                        <p:commandButton icon="pi pi-pencil" update=":dialogs:manage-type-content"
                                         oncomplete="PF('manageTypeDialog').show()"
                                         styleClass="edit-button rounded-button ui-button-success mx-2" process="@this">
                            <f:setPropertyActionListener value="#{type}" target="#{typeBean.selectedType}" />
                            <p:resetInput target=":dialogs:manage-type-content" />
                        </p:commandButton>
                        <p:commandButton class="ui-button-warning rounded-button mx-2" icon="pi pi-trash"
                                         process="@this"
                                         oncomplete="PF('deleteTypeDialog').show()">
                            <f:setPropertyActionListener value="#{type}" target="#{typeBean.selectedType}" />
                        </p:commandButton>
                    </p:column>

                </p:dataTable>
            </h:form>

            <h:form id="dialogs">
                <p:dialog header="Type Details" showEffect="fade" modal="true" widgetVar="manageTypeDialog"
                          responsive="true">
                    <p:outputPanel id="manage-type-content" class="ui-fluid">
                        <p:outputPanel rendered="#{not empty typeBean.selectedType}">
                            <div class="field">
                                <p:outputLabel for="name">Nom de Type: </p:outputLabel>
                                <p:inputText id="name" value="#{typeBean.selectedType.libelle}" required="true" />
                            </div>
                        </p:outputPanel>
                    </p:outputPanel>

                    <f:facet name="footer">
                        <p:commandButton value="Save" icon="pi pi-check" actionListener="#{typeBean.updateType()}"
                                         update="manage-type-content" process="manage-type-content @this">

                        </p:commandButton>
                        <p:commandButton value="Cancel" icon="pi pi-times" onclick="PF('manageTypeDialog').hide()"
                                         class="ui-button-secondary" type="button" />
                    </f:facet>


                </p:dialog>

                <p:dialog header="AJOUTER TYPE" showEffect="fade" modal="true" widgetVar="addTypeDialog"
                          responsive="true">
                    <p:outputPanel id="add-type-content" class="ui-fluid">
                        <div class="field">
                            <p:outputLabel for="nameType">Nom de Type</p:outputLabel>
                            <p:inputText id="nameType" value="#{typeBean.libelle}" required="true" />
                        </div>
                    </p:outputPanel>

                    <f:facet name="footer">
                        <p:commandButton value="Save" icon="pi pi-check" actionListener="#{typeBean.addNewType()}"
                                         update="add-type-content" process="add-type-content @this">
                            <p:confirm header="Confirmation" message="Ajouter un nouveau type?"/>

                        </p:commandButton>
                        <p:commandButton value="Cancel" icon="pi pi-times" onclick="PF('addTypeDialog').hide()"
                                         class="ui-button-secondary" type="button" />
                    </f:facet>

                </p:dialog>


                <p:confirmDialog widgetVar="deleteTypeDialog" showEffect="fade" width="300"
                                 message="Supprimer le type?" header="Confirm" severity="warn">
                    <p:commandButton value="Yes" icon="pi pi-check" actionListener="#{typeBean.deteleType}"
                                     process="@this" onclick="PF('deleteTypeDialog').hide()"/>
                    <p:commandButton value="No" type="button" styleClass="ui-button-secondary" icon="pi pi-times"
                                     onclick="PF('deleteTypeDialog').hide()" />
                </p:confirmDialog>

                <p:confirmDialog global="true" showEffect="fade" width="300">
                    <p:commandButton value="Yes" type="button" styleClass="ui-confirmdialog-yes" icon="pi pi-check" />
                    <p:commandButton value="No" type="button" styleClass="ui-confirmdialog-no ui-button-secondary"
                                     icon="pi pi-times" />
                </p:confirmDialog>
            </h:form>
        </div>
    </ui:define>
</ui:composition>
